#
# base.dict .... makedict.sh sample dictionary template
#

    org 0
word abc
    lit
    1
    lit
    50
    add
    endword
code defgh
    mov.w  #1,-(%a5)        /* a5 is DSP */
    mov.w  #2,-(%a5)
    mov.w  (%a5)+,%d0
    add.w  (%a5)+,%d0
    mov.w  %d0,-(%a5)
    endcode
word test
    nop
    abc
    endword
code add
    jmp  do_plus
code pop
    add.w   #2,%a5
    endcode
code + plus
    move.w  (%a5)+,%d0
    add.w   (%a5)+,%d0
    move.w  %d0,-(%a5)
    endcode
word nop
    endword
code . period
    move.w  (%a5)+,%d0
    jsr     (do_putnum)
    endcode
code cr
    move.b  #13,%d0
    jsr     (putch)
    move.b  #10,%d0
    jsr     (putch)
    endcode
code bl
    move.b  #' ',%d0
    jsr     (putch)
    endcode
code @ atfetch
    move.w  (%a5),%a0
    move.w  (%a0),%d0
    move.w  %d0,(%a5)
    endcode
code C@ bytefetch
    move.w  (%a5),%a0
    move.b  (%a0),%d0
    and.w   #255,%d0
    move.w  %d0,(%a5)
    endcode
code ! exclamation
    move.w  (%a5)+,%a0
    move.w  (%a5)+,%d0
    move.w  %d0,(%a0)
    endcode
code C! bytedeposite
    move.w  (%a5)+,%a0
    move.w  (%a5)+,%d0
    move.b  %d0,(%a0)
    endcode
code base
    move.w  #__base,-(%a5)
    endcode
code typeb
    move.w  (%a5)+,%a0
    jsr     (typeb_sub)
    endcode
code types
    move.w  (%a5)+,%a0
    jsr     (putstr)
    endcode
word ttest
    lit
    #true_str
    types
    endword


word branch
    bne
    8
    #true_str
    types
    bra
    4
    #false_str
    types
    endword
